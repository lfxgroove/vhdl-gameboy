
== Inledning ==
Vi har bestämt oss för att bygga en GameBoy emulator i hårdvara. Denna emulator skall kunna köra enklare GameBoy program, förhoppningsvis också några officiella spel.

== Analys ==

=== CPU ===

I GameBoy sitter en 8-bitars CPU.
CPU Registret innehåller fälten A-F av vardera 8-bitar där A-F, B-C, D-E och H-L kan sammanlänkas. Förutom detta ska en SP och PC finnas och ett statusregister på 8-bitar där endast fyra används Z, N, H och C där H är en halv-carry för de lägsta 4 bitarna. Vi har inspirerats av Olle-roos modellen men kommer göra huvuddelen av all logik i kontrollenheten då vi tror att det blir tydligare VHDL kod. (en köttig case-sats)

=== Minneshantering ===

Minnet i GameBoy-konsolen är uppdelat på följande sätt:
*Main RAM: 8KB
*Video RAM: 8KB
*ROM: Upp till 8MB
Vår FPGA har totalt XXKB så vi får plats med RAM internt, ROM får vi dock inte plats i FPGAn så vi får lägga det på Nexys3.  Förutom Video RAM så ska det finnas ett block på max 1KB i RAM för saker som att spara vart alla sprites är placerade m.m.

=== GPU ===

GPU:n har följande specs:
*Resolution: 160x144 (20x18 tiles)
*Max # of sprites: 40
*Max # sprites/line: 10
*Max sprite size: 8x16
*Min sprite size: 8x8
Vår FPGA kan ge en bild på 640x480 med pixelklocka på 25 Mhz. Vilket ger 4 klockpulser för varje pixel då vi har en 100Mhz klocka. Vi behöver dock endast 160x144pixlar för vårt GameBoy.  Utritning av detta kommer göras genom att stretcha ut GB pixlarna över hela 640x480. Detta gör att efter varje utritad pixel i x-led så ska tre likadana efter den ritas ut och där blir det mer tid för uträkning för nästa bit. Detta gör att vi totalt har 16 klockpulser per pixel på oss. (hur blir de med 24hz uppdateringsfrekvens?) Varje "storpixel" blir alltså 4x3 pixlar stor.


=== Klocka ===

Klockan till GameBoy cpu:n är på 4.194304 MHz, alltså måste vi se till att strypa vår cpu eftersom klockan i FPGA:n är på 100 MHz

=== Indata ===

Indata till vår emulator består av följande:
*Sex knappar
*Ladda nytt ROM
GB har fyra riktningsknappar och A och B som vi inte hanterar genom avbrott utan genom att mjukvaran frågar efter knapptryckningar. GB-rekomendationer är att mjukvaran ska kolla efter uppdateringar en gång per frame.

== Blockschema ==

Den generella uppbyggnaden av vår emulator ser ut som följer:
[[File:block_diagram.png]]

=== CPU ===

[[File:cpu_block.png]]

== Milstolpar ==
Efter halva projekttiden ska vi kunna visa upp en GPU som kan generera en bild med något innehåll, samt en CPU som kan initiera CPU:n så pass mycket.
